let Koa,Router,bodyParser,mongoose,api;_18e‍.w("koa",[["default",["Koa"],function(v){Koa=v}]]);_18e‍.w("koa-router",[["default",["Router"],function(v){Router=v}]]);_18e‍.w("koa-bodyparser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_18e‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_18e‍.w("./api",[["default",["api"],function(v){api=v}]]);require('dotenv').config();






const { PORT ,  MONGO_URI} = process.env;

// 라우터 설정


mongoose.connect(MONGO_URI, {useNewUrlParser: true, useFindAndModify:false, useUnifiedTopology:true})
.then(()=> {console.log('MONgo connected');}).catch(e=>{_18e‍.g.console.error(e);})


const app = new Koa();
const router = new Router();

// 라우터 설정
router.use('/api', api.routes()); // api 라우트 적용

// 라우터 적용 전에 bodyParser 적용
app.use(bodyParser());

// app 인스턴스에 라우터 적용
app.use(router.routes()).use(router.allowedMethods());

app.listen(4000, () => {
  console.log('listening to port 4000');
});